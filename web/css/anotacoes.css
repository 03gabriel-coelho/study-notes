/* DIFERENÇA ENTRE PX, EM E REM */

/*
PX: É uma unidade de medida fixa, ou seja, não muda de acordo com o tamanho da fonte do elemento pai.
EM: É uma unidade de medida relativa, ou seja, muda de acordo com o tamanho da fonte do elemento pai.
REM: É uma unidade de medida relativa, ou seja, muda de acordo com o tamanho da fonte do elemento raiz (html).
*/

/* PROPRIEDADES INTERESSANTES: */

interessantes {
  position: absolute; /*Posso mover livremente o componente dentro do componente pai com top e right */
  box-sizing: border-box; /* Dispoe os elementos filhos de forma correta dentro do componente, sem que ultrapasse caso tenha borda ou padding*/
  left: calc((100% - 200px) / 2); /* fazer calculo de variaveis */
  position: sticky;  /* DEIXA O COMPONENTE FIXO EM RELAÇÃO AO SCROLL DO COMPONENTE PAI */
}

anotacao textos {
  /*Limitando linhas verticalmente */
  height: 2.5rem;
  display: -webkit-box;
  -webkit-line-clamp: 2; /*Quantidade de linhas */
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;

  /*Limitando linhas horizontalmente */
  width: 300px; /* tamanho desejado */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

anotacao flex {
  display: flex; /* transforma o container em um flex container */
  flex-direction: row; /* define a direção dos itens dentro do container */
  flex-wrap: wrap; /* define se os itens devem quebrar linha ou não */
  justify-content: center; /* alinha os itens no centro do container */
  align-items: center; /* alinha os itens no centro do container */
  align-content: center; /* alinha os itens no centro do container */
  align-self: flex-end; /* alinha o item no final do container independente do resto dos componentes junto a ele*/
  order: 1; /* define a ordem dos itens dentro do container */
  flex-grow: 1; /* define o quanto o item pode crescer em relação aos outros itens */
  flex-shrink: 1; /* define o quanto o item pode encolher em relação aos outros itens */
  flex-basis: 100px; /* define o tamanho base do item */
  flex: 1 1 100px; /* define o tamanho base, o quanto pode crescer e o quanto pode encolher */
}

anotacao grid {
  display: grid; /* transforma o container em um grid container */
  grid-template-columns: repeat(
    3,
    1fr
  ); /* define a quantidade de colunas e o tamanho de cada uma */
  grid-template-rows: repeat(
    3,
    1fr
  ); /* define a quantidade de linhas e o tamanho de cada uma */
  grid-auto-rows: 100px; /* define o tamanho padrão das linhas */
  grid-template-areas: "header header header" "main main sidebar" "footer footer footer"; /* define a área de cada item */
  grid-area: header; /* define a área do item */
  grid-column-start: 1; /* define a coluna inicial do item */
  grid-column-end: 3; /* define a coluna final do item */
  grid-row-start: 1; /* define a linha inicial do item */
  grid-row-end: 3; /* define a linha final do item */
  grid-column: 1 / 3; /* define a coluna inicial e final do item */
  grid-row: 1 / 3; /* define a linha inicial e final do item */
  grid-gap: 16px; /* define o espaçamento entre os itens */
  justify-items: center; /* alinha os itens no centro do container */
  align-items: center; /* alinha os itens no centro do container */
  justify-content: center; /* alinha os itens no centro do container */
  align-content: center; /* alinha os itens no centro do container */
  place-items: center; /* alinha os itens no centro do container */
  justify-self: center; /* alinha o item no centro da coluna */
  align-self: center; /* alinha o item no centro da linha */
  grid-template-columns: repeat(
    auto-fill,
    150px
  ); /* FAZ TER VÁRIAS COLUNAS ATÉ PREENCHER A TELA */
  grid-template-columns: repeat(
    auto-fit,
    150px
  ); /* LIMITA DE ACORDO COM A QUANTIDADE DE COMPONENTES*/
}
